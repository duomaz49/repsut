package com.tuomas.repsut.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RecipeToIngredientAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeToIngredientAllPropertiesEquals(RecipeToIngredient expected, RecipeToIngredient actual) {
        assertRecipeToIngredientAutoGeneratedPropertiesEquals(expected, actual);
        assertRecipeToIngredientAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeToIngredientAllUpdatablePropertiesEquals(RecipeToIngredient expected, RecipeToIngredient actual) {
        assertRecipeToIngredientUpdatableFieldsEquals(expected, actual);
        assertRecipeToIngredientUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeToIngredientAutoGeneratedPropertiesEquals(RecipeToIngredient expected, RecipeToIngredient actual) {
        assertThat(expected)
            .as("Verify RecipeToIngredient auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeToIngredientUpdatableFieldsEquals(RecipeToIngredient expected, RecipeToIngredient actual) {
        assertThat(expected)
            .as("Verify RecipeToIngredient relevant properties")
            .satisfies(e -> assertThat(e.getQuantity()).as("check quantity").isEqualTo(actual.getQuantity()))
            .satisfies(e -> assertThat(e.getUnit()).as("check unit").isEqualTo(actual.getUnit()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeToIngredientUpdatableRelationshipsEquals(RecipeToIngredient expected, RecipeToIngredient actual) {
        assertThat(expected)
            .as("Verify RecipeToIngredient relationships")
            .satisfies(e -> assertThat(e.getIngredient()).as("check ingredient").isEqualTo(actual.getIngredient()))
            .satisfies(e -> assertThat(e.getRecipe()).as("check recipe").isEqualTo(actual.getRecipe()));
    }
}
