package com.tuomas.repsut.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class RecipeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeAllPropertiesEquals(Recipe expected, Recipe actual) {
        assertRecipeAutoGeneratedPropertiesEquals(expected, actual);
        assertRecipeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeAllUpdatablePropertiesEquals(Recipe expected, Recipe actual) {
        assertRecipeUpdatableFieldsEquals(expected, actual);
        assertRecipeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeAutoGeneratedPropertiesEquals(Recipe expected, Recipe actual) {
        assertThat(expected)
            .as("Verify Recipe auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeUpdatableFieldsEquals(Recipe expected, Recipe actual) {
        assertThat(expected)
            .as("Verify Recipe relevant properties")
            .satisfies(e -> assertThat(e.getName()).as("check name").isEqualTo(actual.getName()))
            .satisfies(e -> assertThat(e.getDescription()).as("check description").isEqualTo(actual.getDescription()))
            .satisfies(e -> assertThat(e.getInstructions()).as("check instructions").isEqualTo(actual.getInstructions()))
            .satisfies(e -> assertThat(e.getCookTime()).as("check cookTime").isEqualTo(actual.getCookTime()))
            .satisfies(e -> assertThat(e.getServings()).as("check servings").isEqualTo(actual.getServings()))
            .satisfies(e -> assertThat(e.getCreatedDate()).as("check createdDate").isEqualTo(actual.getCreatedDate()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertRecipeUpdatableRelationshipsEquals(Recipe expected, Recipe actual) {
        assertThat(expected)
            .as("Verify Recipe relationships")
            .satisfies(e -> assertThat(e.getCategories()).as("check categories").isEqualTo(actual.getCategories()));
    }
}
